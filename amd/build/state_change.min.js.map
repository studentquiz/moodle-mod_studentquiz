{"version":3,"file":"state_change.min.js","sources":["../src/state_change.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for state change dialog\n *\n * @module    mod_studentquiz/state_change\n * @copyright 2019 HSR (http://www.hsr.ch)\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/str'], function($, Ajax, Notification, Str) {\n\n    var t = {\n\n        SELECTOR: {\n            STATE_SELECT: '#menustatetype',\n            CHANGE_STATE_BUTTON: 'div.singlebutton.continue_state_change [type=submit]',\n            STATE_VALUE_INPUT: 'input[name=state]',\n            SUBMIT_STATE_BUTTON: '#change_state',\n            CHANGE_STATE_NOTIFICATION: 'span.change-question-state',\n            CURRENT_STATE_TEXT: 'div.current-state',\n        },\n\n        init: function() {\n            const submitStateButton = $(t.SELECTOR.SUBMIT_STATE_BUTTON);\n            let lastSelectedState = submitStateButton.attr('data-currentstate');\n\n            // TODO: Something rerenders or manipulates the modal elements, so the event has to be attached to the\n            // document - see #278. Better would be using the dialog framework similiar to the comment_area instead of\n            // putting the dialog together manually in the renderer functions.\n            $(document).on('change', t.SELECTOR.STATE_SELECT, {}, function() {\n                // Since it happens that the modal elements gets rerendered or manipulated in some way, the elements\n                // need to be obtained freshly.\n                var stateChangeSelect = $(t.SELECTOR.STATE_SELECT);\n                var changeStateButton = $(t.SELECTOR.CHANGE_STATE_BUTTON);\n                var stateValueInput = $(t.SELECTOR.STATE_VALUE_INPUT);\n                var submitStateButton = $(t.SELECTOR.SUBMIT_STATE_BUTTON);\n\n                if (stateChangeSelect.val() !== '' && stateChangeSelect.val() !== lastSelectedState) {\n                    stateValueInput.val(stateChangeSelect.val());\n                    changeStateButton.removeAttr('disabled');\n                    submitStateButton.removeAttr('disabled');\n                } else {\n                    changeStateButton.attr('disabled', 'disabled');\n                    submitStateButton.attr('disabled', 'disabled');\n                }\n            });\n\n            $(document).on('click', t.SELECTOR.SUBMIT_STATE_BUTTON, {}, function() {\n                // Since it happens that the modal elements gets rerendered or manipulated in some way, the elements\n                // need to be obtained freshly.\n                var stateChangeSelect = $(t.SELECTOR.STATE_SELECT);\n                var submitStateButton = $(t.SELECTOR.SUBMIT_STATE_BUTTON);\n                const currentStateText = $(t.SELECTOR.CURRENT_STATE_TEXT);\n\n                submitStateButton.attr('disabled', 'disabled');\n                var pendingPromise = t.addPendingJSPromise('studentquizStateChange');\n                require(['core/loadingicon'], function(LoadingIcon) {\n                    var parentElement = $(t.SELECTOR.CHANGE_STATE_NOTIFICATION);\n                    LoadingIcon.addIconToContainerRemoveOnCompletion(parentElement, pendingPromise);\n                });\n                var args = {\n                    courseid: submitStateButton.attr('data-courseid'),\n                    cmid: submitStateButton.attr('data-cmid'),\n                    studentquizquestionid: submitStateButton.attr('data-studentquizquestionid'),\n                    state: stateChangeSelect.val()\n                };\n                var failure;\n                var promise = Ajax.call([{methodname: 'mod_studentquiz_update_question_state', args: args}], true, true);\n                promise[0].then(function(results) {\n                    Notification.alert(results.status, results.message);\n                    pendingPromise.resolve();\n                    lastSelectedState = stateChangeSelect.val();\n                    const currentSelectedText = stateChangeSelect.find('option:selected').text();\n                    Str.get_string('changecurrentstate', 'studentquiz', currentSelectedText).done(newString => {\n                        currentStateText.html(newString);\n                    });\n                    // Reload the Studentquiz page.\n                    window.opener.location.reload();\n                    // Each then() should return a value or throw (promise/always-return).\n                    return;\n                }).fail(failure);\n            });\n        },\n\n        /**\n         * Add Pending Promise to current session.\n         *\n         *\n         * @param {string} pendingKey JSPending key\n         * @returns {*|jQuery|{}} Pending Promise\n         */\n        addPendingJSPromise: function(pendingKey) {\n            M.util.js_pending(pendingKey);\n\n            var pendingPromise = $.Deferred();\n            pendingPromise.then(function() {\n                M.util.js_complete(pendingKey);\n                return arguments[0];\n            }).catch(Notification.exception);\n\n            return pendingPromise;\n        },\n    };\n\n    return t;\n});\n"],"names":["define","$","Ajax","Notification","Str","t","SELECTOR","STATE_SELECT","CHANGE_STATE_BUTTON","STATE_VALUE_INPUT","SUBMIT_STATE_BUTTON","CHANGE_STATE_NOTIFICATION","CURRENT_STATE_TEXT","init","lastSelectedState","attr","document","on","stateChangeSelect","changeStateButton","stateValueInput","submitStateButton","val","removeAttr","currentStateText","pendingPromise","addPendingJSPromise","require","LoadingIcon","parentElement","addIconToContainerRemoveOnCompletion","args","courseid","cmid","studentquizquestionid","state","call","methodname","then","results","alert","status","message","resolve","currentSelectedText","find","text","get_string","done","newString","html","window","opener","location","reload","fail","failure","pendingKey","M","util","js_pending","Deferred","js_complete","arguments","catch","exception"],"mappings":";;;;;;;AAuBAA,sCAAO,CAAC,SAAU,YAAa,oBAAqB,aAAa,SAASC,EAAGC,KAAMC,aAAcC,SAEzFC,EAAI,CAEJC,SAAU,CACNC,aAAc,iBACdC,oBAAqB,uDACrBC,kBAAmB,oBACnBC,oBAAqB,gBACrBC,0BAA2B,6BAC3BC,mBAAoB,qBAGxBC,KAAM,eAEEC,kBADsBb,EAAEI,EAAEC,SAASI,qBACGK,KAAK,qBAK/Cd,EAAEe,UAAUC,GAAG,SAAUZ,EAAEC,SAASC,aAAc,IAAI,eAG9CW,kBAAoBjB,EAAEI,EAAEC,SAASC,cACjCY,kBAAoBlB,EAAEI,EAAEC,SAASE,qBACjCY,gBAAkBnB,EAAEI,EAAEC,SAASG,mBAC/BY,kBAAoBpB,EAAEI,EAAEC,SAASI,qBAEL,KAA5BQ,kBAAkBI,OAAgBJ,kBAAkBI,QAAUR,mBAC9DM,gBAAgBE,IAAIJ,kBAAkBI,OACtCH,kBAAkBI,WAAW,YAC7BF,kBAAkBE,WAAW,cAE7BJ,kBAAkBJ,KAAK,WAAY,YACnCM,kBAAkBN,KAAK,WAAY,gBAI3Cd,EAAEe,UAAUC,GAAG,QAASZ,EAAEC,SAASI,oBAAqB,IAAI,eAGpDQ,kBAAoBjB,EAAEI,EAAEC,SAASC,cACjCc,kBAAoBpB,EAAEI,EAAEC,SAASI,2BAC/Bc,iBAAmBvB,EAAEI,EAAEC,SAASM,oBAEtCS,kBAAkBN,KAAK,WAAY,gBAC/BU,eAAiBpB,EAAEqB,oBAAoB,0BAC3CC,QAAQ,CAAC,qBAAqB,SAASC,iBAC/BC,cAAgB5B,EAAEI,EAAEC,SAASK,2BACjCiB,YAAYE,qCAAqCD,cAAeJ,uBAEhEM,KAAO,CACPC,SAAUX,kBAAkBN,KAAK,iBACjCkB,KAAMZ,kBAAkBN,KAAK,aAC7BmB,sBAAuBb,kBAAkBN,KAAK,8BAC9CoB,MAAOjB,kBAAkBI,OAGfpB,KAAKkC,KAAK,CAAC,CAACC,WAAY,wCAAyCN,KAAMA,QAAQ,GAAM,GAC3F,GAAGO,MAAK,SAASC,SACrBpC,aAAaqC,MAAMD,QAAQE,OAAQF,QAAQG,SAC3CjB,eAAekB,UACf7B,kBAAoBI,kBAAkBI,YAChCsB,oBAAsB1B,kBAAkB2B,KAAK,mBAAmBC,OACtE1C,IAAI2C,WAAW,qBAAsB,cAAeH,qBAAqBI,MAAKC,YAC1EzB,iBAAiB0B,KAAKD,cAG1BE,OAAOC,OAAOC,SAASC,YAGxBC,KAdCC,eAyBZ9B,oBAAqB,SAAS+B,YAC1BC,EAAEC,KAAKC,WAAWH,gBAEdhC,eAAiBxB,EAAE4D,kBACvBpC,eAAea,MAAK,kBAChBoB,EAAEC,KAAKG,YAAYL,YACZM,UAAU,MAClBC,MAAM7D,aAAa8D,WAEfxC,wBAIRpB"}